{"version":3,"sources":["../src/simple-call-x.js"],"names":[],"mappings":"AAAA,OAAO,MAAP,MAAmB,eAAnB;AACA,OAAO,IAAP,MAAiB,eAAjB;AAEA,IAAM,UAAU,GAAG,SAAnB;IACc,W,GAAiC,I,CAAxC,K;IAA0B,U,GAAc,I,CAApB,I;AAC3B,IAAM,MAAM,GAAG,IAAI,CAAC,UAAD,EAAa,WAAb,CAAnB;AACA,IAAM,WAAW,GAAG,IAAI,CAAC,WAAD,EAAc,GAAG,QAAjB,CAAxB;AACA,IAAM,aAAa,GAAG,oBAAtB;AACA,IAAM,QAAQ,GAAG,mBAAjB;;AAEA,IAAM,gBAAgB,GAAG,SAAS,gBAAT,CAA0B,KAA1B,EAAiC;AACxD,MAAI,OAAO,KAAP,KAAiB,UAAjB,IAA+B,WAAW,CAAC,KAAD,CAAX,KAAuB,QAA1D,EAAoE;AAClE,UAAM,IAAI,UAAJ,CAAe,KAAK,GAAG,aAAvB,CAAN;AACD;;AAED,SAAO,KAAP;AACD,CAND,C,CAQA;AACA;;AACA;;;;;;;;;;;AAWA;;;AACA,IAAM,IAAI,GAAG,SAAS,IAAT,CAAc,CAAd,EAAiB,CAAjB,EAAoB;AAC/B;AACA,SAAO,MAAM,CAAC,gBAAgB,CAAC,CAAD,CAAjB,EAAsB,CAAtB,EAAyB,MAAM,CAAC,SAAS,CAAC,CAAD,CAAV,CAA/B,CAAb;AACD,CAHD;;AAKA,eAAe,IAAf","file":"simple-call-x.esm.js","sourcesContent":["import pusher from 'util-pusher-x';\nimport bind from 'simple-bind-x';\n\nconst $TypeError = TypeError;\nconst {apply: nativeApply, call: nativeCall} = bind;\nconst $apply = bind(nativeCall, nativeApply);\nconst toStringTag = bind(nativeApply, {}.toString);\nconst ERROR_MESSAGE = ' is not a function';\nconst funcType = '[object Function]';\n\nconst assertIsFunction = function assertIsFunction(value) {\n  if (typeof value !== 'function' && toStringTag(value) !== funcType) {\n    throw new $TypeError(value + ERROR_MESSAGE);\n  }\n\n  return value;\n};\n\n// eslint-disable jsdoc/check-param-names\n// noinspection JSCommentMatchesSignature\n/**\n * The abstract operation Call is used to call the [[Call]] internal method of a function object.\n *\n * @function call\n * @param {Function} F - The target function.\n * @param {*} [V] - The context.\n * @param {Array} [args] - Argument to call the function with.\n * @throws {TypeError} If target is not a function.\n * @returns {*} The the result of invoking the function.\n * @see https://www.ecma-international.org/ecma-262/6.0/#sec-call\n */\n// eslint-enable jsdoc/check-param-names\nconst call = function call(F, V) {\n  /* eslint-disable-next-line prefer-rest-params */\n  return $apply(assertIsFunction(F), V, pusher(arguments[2]));\n};\n\nexport default call;\n"]}